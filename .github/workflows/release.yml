name: Release

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write

    steps:
      # Checkout the repository code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Setup Node.js environment (required for semantic-release)
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # Install semantic-release and its plugins
      - name: Install dependencies
        run: |
          npm install -g semantic-release \
            @semantic-release/changelog \
            @semantic-release/git \
            @semantic-release/github

      # Run semantic-release to generate changelog, bump version, and create GitHub release
      - name: Run Semantic Release
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npx semantic-release
          # Save the latest tag name (e.g., v1.0.0) to environment variable
          echo "TAG_NAME=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV

      # Setup Flutter environment
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 3.35.3
          channel: stable

      # Install Flutter dependencies (pubspec.yaml)
      - name: Install Flutter dependencies
        run: flutter pub get

      # Build release APK
      - name: Build release APK
        run: flutter build apk --release

      # Rename APK with version number (e.g., lifeguard-v1.0.0.apk)
      - name: Rename APK with version
        run: |
          mkdir -p build/artifacts
          cp build/app/outputs/flutter-apk/release/app-release.apk build/artifacts/lifeguard-${{ env.TAG_NAME }}.apk

      # Upload APK to the GitHub release created by semantic-release
      - name: Upload APK to Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.TAG_NAME }}
          files: build/artifacts/lifeguard-${{ env.TAG_NAME }}.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
